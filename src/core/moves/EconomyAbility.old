import Move, { CallbackResult } from "../move";
import { GameState } from "../states";
import { AbilityType, MoveType } from "../types";

export default class EconomyAbility extends Move {
    constructor(target: number) {
        super(MoveType.Ability, null, target, null);
    }

    execute(state: GameState): CallbackResult {

        // sort by similarity

        // Army ->
        // Recover (unit, health < max health)
        // Promote (unit, 3+ kills and not veteran)
        // Boost (nearby unit)
        // HealOthers (unit, adj units can recover)
        // FreezeArea (unit, adj enemies are not frozen)

        // Passive ->
        // BreakIce (tile ice)
        // Drain (unfloods a tile)

        // Destructive ->
        // Explode (unit, anytime)
        // Disband (unit, anytime)
        // BurnForest (tile forest)
        // ClearForest (tile forest)
        // Decompose (recycle, cymanti), 
        // Destroy (tile structure)
        // GrowForest (tile field)


        const target = this.getTarget();
        
        const struct = state.structures[target];


        return {
            rewards: [],
            undo: () => {

            }
        }
    }
}